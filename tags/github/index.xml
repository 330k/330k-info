<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GitHub on 330k info</title>
    <link>https://www.330k.info/tags/github/</link>
    <description>Recent content in GitHub on 330k info</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 11 Jul 2020 19:41:44 +0900</lastBuildDate>
    
	<atom:link href="https://www.330k.info/tags/github/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>キャノンボール専用 風向き予測(β)</title>
      <link>https://www.330k.info/software/cannonball-wind-map/</link>
      <pubDate>Sat, 11 Jul 2020 19:41:44 +0900</pubDate>
      
      <guid>https://www.330k.info/software/cannonball-wind-map/</guid>
      <description>キャノンボール専用の簡易版Epic Ride Weatherです。 OpenWeatherのWeather APIの無料範囲で取得できるデータを使っています。 スタート時刻を選ぶことで各地点通過時刻に最も近い時刻の予報データを表示します(カーソルキーに対応) 取得できる予報データは48時間後までなので、最大24時間後のスタート時刻まで表示できます 6時間に1回データを取得しています 現時点では大阪スタートのみ対応 地点は</description>
    </item>
    
    <item>
      <title>Hugo &#43; GitHub Pages &#43; CloudFlareにGoogleサイトから移転</title>
      <link>https://www.330k.info/essay/move_to_github_pages_hugo_from_google_sites/</link>
      <pubDate>Tue, 08 Aug 2017 19:24:04 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/move_to_github_pages_hugo_from_google_sites/</guid>
      <description>今まで独自ドメインでGoogleサイトを利用してきたが、 「新しいGoogleサイト」の機能が全然ダメ(特にガジェットが使えなくなる)で使い物にならない Google自身が推進している常時SSL化も独自ドメインでは機能しない(正確にはMixed Contentsを修正できない) 無駄に色々と読み込むせいで遅い ということで他のサービスへの移転を決断。 AWSやGCP上に構築することも考えたものの、 大したPVで</description>
    </item>
    
    <item>
      <title>GPXトラックログを間引く・簡略化</title>
      <link>https://www.330k.info/software/simplify_gpx/</link>
      <pubDate>Wed, 28 Sep 2016 00:00:00 +0900</pubDate>
      
      <guid>https://www.330k.info/software/simplify_gpx/</guid>
      <description>概要 GPSロガーで取ったGPXログを公開する際、 途切れ途切れのトラックログを結合し 日ごとにそれをまた分割し それぞれを1トラック400ポイント程度に間引いて簡略化する という手間がかかっていたため、この一連の作業を一括処理するプログラムを作った。 また、ツーリング中には事前に作成しておいたGPXファイルをAndroidのRMapsや地図ロイドに読み込ませて走行ルートを確認しているのだが、 GPXファイルに</description>
    </item>
    
    <item>
      <title>Google MapsでGPXルート作成</title>
      <link>https://www.330k.info/software/create_gpx_with_google_maps/</link>
      <pubDate>Sat, 06 Aug 2016 00:00:00 +0900</pubDate>
      
      <guid>https://www.330k.info/software/create_gpx_with_google_maps/</guid>
      <description>思った以上に使っていただいてAPI料金の請求がすごいことになったので、申し訳ないのですが1日1000リクエストに制限しました。 地図やルートが表示されないときは制限に引っかかっておりますので、時間を置いて再度アクセスしてください。 PC用フルスクリーン版 モバイル(スマートフォン)版 使い方 出発地点と目的地点を入れて「Calculate Route」をクリック。 途中経路を変えたい場合は、通常のGoogleマ</description>
    </item>
    
    <item>
      <title>GeoDistanceとその他の測地線距離算出式の精度</title>
      <link>https://www.330k.info/essay/precision-of-mathematica-geodistance-and-geographical-distance-formula/</link>
      <pubDate>Sat, 07 Jun 2014 00:00:00 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/precision-of-mathematica-geodistance-and-geographical-distance-formula/</guid>
      <description>Mathematicaには2点の緯度と経度を与えて、その間の測地線距離を返す関数としてGeoDistanceがある。 しかしながら、ここで書かれているように、その精度には疑問が呈されているようだ。 他の有名な測地線距離の計算方法として、 ヒュベニの式(カシミール3Dが採用しているが、英語圏では情報が見つからない) 国土地理院の測量計算サイトの計算式のついてのドキュメントを実装したもの 完全な球体とみなして計</description>
    </item>
    
    <item>
      <title>Douglas-Peucker向けの優先度付きキュー実装の検討</title>
      <link>https://www.330k.info/essay/implement-of-priority-queue-for-douglas-peucker-simplify-algorithm/</link>
      <pubDate>Thu, 29 May 2014 00:00:00 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/implement-of-priority-queue-for-douglas-peucker-simplify-algorithm/</guid>
      <description>Nov. 29 2015: JavaScriptで実装した優先度付きキューをGitHubで公開→https://github.com/330k/priorityqueue_js/ 各ヒープのベンチマーク → http://330k.github.io/priorityqueue_js/benchmark.html これにはFibonacci Heapも比較対象に入れてある 折れ線を間引くで書いたように、 Douglas-Peuckerアルゴリズムを改良して指定した点数まで点を削減して折れ線を簡略化する場合、 優先度付きキューを使うことに</description>
    </item>
    
  </channel>
</rss>