<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Google on 330k info</title>
    <link>https://www.330k.info/tags/google/</link>
    <description>Recent content in Google on 330k info</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 08 Aug 2017 19:24:04 +0900</lastBuildDate>
    
	<atom:link href="https://www.330k.info/tags/google/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hugo &#43; GitHub Pages &#43; CloudFlareにGoogleサイトから移転</title>
      <link>https://www.330k.info/essay/move_to_github_pages_hugo_from_google_sites/</link>
      <pubDate>Tue, 08 Aug 2017 19:24:04 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/move_to_github_pages_hugo_from_google_sites/</guid>
      <description>今まで独自ドメインでGoogleサイトを利用してきたが、
 「新しいGoogleサイト」の機能が全然ダメ(特にガジェットが使えなくなる)で使い物にならない Google自身が推進している常時SSL化も独自ドメインでは機能しない 無駄に色々と読み込むせいで遅い(Google自身のPageSpeed Insightでも低得点)  ということで他のサービスへの移転を決断。
AWSやGCP上に構築することも考えたものの、 大したPVでもないので無料で使える組み合わせとして、以下の構成にした。
 Hugoを使って静的にサイトを生成 GitHub Pagesにアップロード CloudFlareを使って常時HTTPS化に対応  Hugo + GitHub Pagesの部分は Hugo + Github Pagesでブログを公開してみた を参考にした。
Hugo Ubuntuではapt-getでHugoをインストールできる(最新版とは限らないので注意)。
$ sudo apt-get install hugo  テーマは、少し古いバージョンのHugoでも動作するMainroadに決定。 後は以下の作業を実施。
 今までGoogleサイトのガジェットで行っていたGoogle MapsでのKMLファイルの表示を行うShortcodeを作成。 CSSファイルをいじって横幅を拡大。 コードのシンタックスハイライトを行うため、highlight.jsを読み込むようlayouts/partials/header.htmlを修正。  GitHub GitHubにGitHub Pages用のリポジトリを作成。 参考サイトにならい、Hugo自体のリポジトリも作成。
ここでUser Pages(リポジトリ名: ユーザ名.github.io)で作成すると、 GitHubの他のリポジトリにも独自ドメインの設定が反映される。
これでは既存のプロジェクトページすべてのURLが変更になってしまうし、 今後GitHub Pagesから別のサービスに移行するかもしれないので、そのときにも困る。 そこでUser Pagesは作成せず、Project Pagesとして作成する。
c.f. Custom domain redirects for GitHub Pages sites
テーマを選ぶために色々変えていたら、一度リポジトリが壊れてしまってpushもpullもできなくなってしまった。 仕方がないので、
 ローカルの.gitディレクトリを削除して、残りを別ディレクトリに退避 GitHub上のリポジトリを削除 GitHub上でリポジトリを再度作成 ローカルにgit clone 別ディレクトリに退避しておいたデータを戻してgit add→git push  として対応(もっとうまいやり方はあるとは思うが、git submoduleの動作について理解不足)。</description>
    </item>
    
    <item>
      <title>Google MapsでGPXルート作成</title>
      <link>https://www.330k.info/software/create_gpx_with_google_maps/</link>
      <pubDate>Sat, 06 Aug 2016 00:00:00 +0900</pubDate>
      
      <guid>https://www.330k.info/software/create_gpx_with_google_maps/</guid>
      <description>PC用フルスクリーン版 モバイル(スマートフォン)版  使い方  出発地点と目的地点を入れて「Calculate Route」をクリック。 途中経路を変えたい場合は、通常のGoogleマップのようにドラッグして変更します。「Reduce into *** points」をクリックすると、trkpt要素の数を削減します(Douglas-Peuckerアルゴリズムを使用)。赤線が簡略化されたルートです。 「Add Elevation」をクリックすると、標高(ele要素)を追加します(100点で1秒かかります)。 「Download」をクリックすると、download.gpxというファイル名でGPXファイルがダウンロードされます。  作った経緯 今までは自転車ツーリングをするとき、
 Googleマップでルートを作成 GMapToGPXでGPXファイルにする カシミール3Dで基盤地図情報(標高)で標高データを追加 累積標高などを確認 Androidの地図ロイドなどに取り込んでツーリング中に確認  というやり方でルートを検討・確認していた。
だが&amp;rdquo;新しいGoogleマップ&amp;rdquo;になってから、GMapToGPXが使えなくなってしまったので、 Google Maps API v3を使ってGPXのトラックを生成する、簡単なプログラムを書いてみた。
スマートフォンのブラウザ(標準ブラウザ、Chrome、Firefox)でも動作するので、ツーリングなどの出先でもルートを作成可能。
注意事項  Chrome(Ubuntu, Windows 7, Windows 10)、Firefox(Ubuntu, Windows 7)、IE 11、Edgeで動作確認しています。 Google Maps APIの制限により、途中に設定できる地点は8箇所までです。 Internet Explorer 8ではダウンロードができません。テキストボックスに生成されたGPXテキストをコピーし、メモ帳などに貼り付けutf8で保存してください。 Internet Explorer 9, 10は未確認です。 iOSのSafariではGPXファイルのダウンロードができません。  主な更新・修正点  地図ロイドやルートラボに合わせ、簡略化後の点数を800点と8000点にした。(May 26 2014) Douglas-Peuckerのアルゴリズムで優先度付きキューの実装を変更し、高速化。(May 26 2014) 間引き時にメルカトル図法で投影した座標に対してDouglas-Peuckerを適用するように変更。(Jun 6 2014) モバイル版、フルスクリーン版をGitHubにホスティング先を変更。(Mar 13 2015) IEとEdgeでの動作状況を追記。(Oct.</description>
    </item>
    
  </channel>
</rss>