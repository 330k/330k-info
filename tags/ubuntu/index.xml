<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ubuntu on 330k info</title>
    <link>https://www.330k.info/tags/ubuntu/</link>
    <description>Recent content in Ubuntu on 330k info</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 06 Jun 2017 06:37:00 +0900</lastBuildDate>
    
	<atom:link href="https://www.330k.info/tags/ubuntu/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Xubuntu 16.04 &#43; Snortで簡易IDS構築</title>
      <link>https://www.330k.info/essay/xubuntu1604_snort_base/</link>
      <pubDate>Tue, 06 Jun 2017 06:37:00 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/xubuntu1604_snort_base/</guid>
      <description>ウイルス等に侵入された後の対策として、IDSやIPS製品の紹介をベンダーから受けたが、正直なところ価格が高かったのと、検知されるメッセージがSnort由来のものが多い気がしたので、自分でSnortを構築して商用製品との差を調べてみることにした。
構築環境  PC : 余っていたノートPC Panasonic LetsNote CF-NX1 OS : Xubuntu 16.04.2 (LetsNoteの有線LANと無線LANのNICを認識できる可能性が高いディストリビューションとして選択) ルータ : Yamaha RTX810 IDSとして運用(ミラーポートの通信を監視) LetsNoteの有線LANはミラーポートに接続し、通信を監視 LetsNote自体にアクセスするときには無線LANを使用する  図(適当)  手順 基本的に、以下のドキュメント通りでOK。
Snort 2.9.9.x on Ubuntu 14 -16
LetsNoteでは有線LANのNICはenp0s25、無線LANはwlp2s0となった。
注意点は以下の通り。
 rule_url=https://www.snort.org/reg-rules/|snortrules-snapshot.tar.gz|&amp;lt;oinkcode&amp;gt; → rule_url=https://www.snort.org/rules/|snortrules-snapshot.tar.gz|&amp;lt;oinkcode&amp;gt; ※微妙にURLが変わっているので注意 sudo /usr/local/bin/pulledpork.pl -c /etc/snort/pulledpork.conf -l → sudo /usr/local/bin/pulledpork.pl -c /etc/snort/pulledpork.conf -l -o /etc/snort/rules/snort.rules ※-oオプションが必要と怒られた  有線LAN(enp0s25)はミラーポートから受信だけできれば良いので、 /etc/network/interfacesを編集して使われていないネットワークのアドレスを適当に設定。 管理の通信やBASEによるログを眺めるためには無線(wlp2s0)を使用するので、 NetworkManagerを使って適当に固定IPを設定。
RTX810はhttp://www.rtpro.yamaha.co.jp/RT/manual/rt-common/setup/lan_port-mirroring.html を参照してミラーポートを設定。
 設定(ポート1と2の送信および受信フレームをポート4にミラー) lan port-mirroring lan1 4 in 1 2 out 1 2 解除 no lan port-mirroring lan1  結果 一応IDSとして構築できたので、現在はログを見て様子見。今のところのメモは以下。</description>
    </item>
    
    <item>
      <title>Tikaを使って指定したディレクトリ以下の全ファイルのメタデータを収集</title>
      <link>https://www.330k.info/essay/aggregate-metadata-from-all-pdf-office-documents/</link>
      <pubDate>Sun, 29 Nov 2015 00:00:00 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/aggregate-metadata-from-all-pdf-office-documents/</guid>
      <description>会社で外部に公開しているPDFファイルの作成者やタイトルにおかしいもの(社名が間違っている etc.)があることに気づき、 会社のファイルサーバにあるWord、Excel、PowerPoint、PDFファイルのメタ情報を一覧で出力し、 Excelにインポートして変なメタ情報が設定されていないかチェックするためのスクリプトを作ってみた。
準備 まずはapacheからTikaをダウンロード(執筆時点では1.11が最新)
wget http://ftp.jaist.ac.jp/pub/apache/tika/tika-app-1.11.jar  全メタデータを収集 とにかく全部のメタデータを収集したいときは、tikaのjarファイルと同じディレクトリに以下のようなスクリプトを配置。 検索対象のディレクトリは3行目で指定する。
#!/bin/bash dir=~/Documents/ output=metadata.xml port=12345 tmpfile=temp.txt java -jar tika-app-1.11.jar -s -x --port $port &amp;gt; $tmpfile &amp;amp; procid=$! sleep 1 echo &amp;quot;&amp;lt;?xml version=\&amp;quot;1.0\&amp;quot; encoding=\&amp;quot;utf-8\&amp;quot; ?&amp;gt;&amp;quot; &amp;gt; $output echo &amp;quot;&amp;lt;files&amp;gt;&amp;quot; &amp;gt;&amp;gt; $output find &amp;quot;$dir&amp;quot; -iname &amp;quot;*.pdf&amp;quot; -o -iname &amp;quot;*.doc&amp;quot; -o -iname &amp;quot;*.doc?&amp;quot; -o -iname &amp;quot;*.xls&amp;quot; -o -iname &amp;quot;*.xls?&amp;quot; -o -iname &amp;quot;*.ppt&amp;quot; -o -iname &amp;quot;*.ppt?&amp;quot; | while read i do echo &amp;quot;&amp;lt;file&amp;gt;&amp;quot; &amp;gt;&amp;gt; $output echo &amp;quot; &amp;lt;filepath&amp;gt;&amp;lt;!</description>
    </item>
    
    <item>
      <title>秘密録音した音声ファイルをYoutubeにバックアップ</title>
      <link>https://www.330k.info/essay/upload_recorded_mp3_files_to_youtube/</link>
      <pubDate>Thu, 15 Oct 2015 00:00:00 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/upload_recorded_mp3_files_to_youtube/</guid>
      <description>私はパワハラ対策として、毎日ICレコーダーを使って秘密録音を実施している。 ただ、毎日10時間を超える録音時間のため、32kbpsで録音しても1日あたり200MB弱の音声ファイルがHDDに追加されていき、HDDの容量を圧迫していく。
そこで、バックアップを兼ねて動画化してYoutubeにアップロードするようにし、 HDDの空き容量が減ってきたらオリジナルの録音ファイルを消去していくことにした。
ffmpeg(avconv)を使い、以下の手順で実施する。
 適当に画像ファイルを作成する 画像ファイルから無音声の動画ファイル(再生時間24時間)を作成する 無音声の動画ファイルと、毎日録音した音声ファイルを結合する 結合した動画ファイルをYoutubeにアップロード  具体的には、適当にblank.pngという名前で640x480とか好みのサイズで画像を作成し、以下のコマンドで24時間の無音声動画ファイル(blank24.mov)を作成。
avconv -y -loop 1 -r 1 -i blank.png -t 86400 blank24.mov  これでフレームレート1 fps、動画時間が24時間(86400秒)の無音声動画ファイルblank24.movができる。 私の環境では5分程度かかったが、このファイルは1度作っておけば何度でも使えるので、最初の1回だけ待てば良い。
次に、この無音声の動画ファイル(blank24.mov)と、録音した音声ファイル(input.mp3)を結合する。
avconv -y -i blank24.mov -i input.mp3 -vcodec copy -acodec copy -shortest output.mov  -shortestオプションを加えているので、24時間のblank24.movと音声ファイルの時間のうち、短い方の時間でoutput.movが作成される。
動画になったことにより、元のMP3ファイルよりもファイルサイズが1割ほど増える。 私の環境では12時間程度録音したものからでも1分程度のエンコード時間で動画ファイルを作成できた。
ちなみに出来上がりの動画ファイルのコンテナがMOVなのは、録音した音声ファイルの拡張子が、 ICレコーダーで録音したMP3、Androidの録音アプリのmp4、iPhoneの録音アプリのm4aと3種類あったため、 それと競合しないコンテナ形式を選んだ。
また、無音声動画ファイル(blank24.mov)を作成せず、1コマンドで静止画と音声ファイルを結合することも可能だが、 都度動画部分のエンコードが発生するため時間がかかる。
毎日音声ファイルが増えていくような状況では、予め無音声動画ファイルをつくっておき、 -vcodec copyとすることで再エンコードを省略すれば、毎日の処理が高速化できる。
ただし、Youtubeの制限により、15分の制限を解除したアカウントでも、動画の最長時間は12時間に制限される。 したがって、私は以下のようなシェルスクリプトを書いて実行している。
#!/bin/bash find ./ -iname &amp;quot;*.mp3&amp;quot; -o -iname &amp;quot;*.mp4&amp;quot; -o -iname &amp;quot;*.m4a&amp;quot; | while read i do hour=`avconv -i &amp;quot;$i&amp;quot; 2&amp;gt;&amp;amp;1 | grep Duration | sed -E &amp;quot;s/.</description>
    </item>
    
    <item>
      <title>3Dグラフィックスが正常に表示されない問題</title>
      <link>https://www.330k.info/essay/3d-graphics-not-showed-in-ubuntu-mathematica/</link>
      <pubDate>Fri, 09 Jan 2015 00:00:00 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/3d-graphics-not-showed-in-ubuntu-mathematica/</guid>
      <description>たまたま私の環境の問題かもしれないが、
 Intel Core-i7 3770 Ubuntu 14.04 LTS Mathematica 8.0.4 Home Edition  という環境で、Mathematicaのノートブック上でPlot3DなどのGraphics3Dオブジェクトが、 うまく表示できないことに悩まされていたが、その解決法が分かった。
メニューの「編集」→「環境設定」から、「詳細」タブを開き、「オプションインスペクタを開く」をクリック。  オプションインスペクタでは「グラフィックス設定」「RenderingOptions」内の&amp;rdquo;Graphics3DRenderingEngine&amp;rdquo;を デフォルトの&amp;rdquo;Automatic&amp;rdquo;から&amp;rdquo;Software&amp;rdquo;に変更する。  私の場合は以上で上手く行った。 Windowsではこのようなことはなかったのだが・・・。</description>
    </item>
    
    <item>
      <title>ファイル名順にソートしてzipファイルを作成する</title>
      <link>https://www.330k.info/essay/create-zip-with-alphabetical-order/</link>
      <pubDate>Mon, 30 Dec 2013 04:36:00 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/create-zip-with-alphabetical-order/</guid>
      <description>自炊した書籍をzipで作成する際、普通に圧縮すると変な順番で格納されてしまう。 実用上ほとんど問題はないのだが、なんとなくファイル名順に格納したかったので、そのやり方をメモ。
ls -1 ディレクトリ名 | zip -@rjDo0 圧縮ファイル名.zip  やっていることは
 lsに-1オプションをつけてファイル1行ずつでファイル名を出力(デフォルトでは文字コード順) zipに-@オプションをつけ、標準入力にファイル名を渡して圧縮(残りのオプションはお好みで)  findを使って行うときは、もう少し工夫が必要で、以下のように findの-print0オプションとsortの-zオプション、xargsの-0オプションでNull文字区切りでファイル名を出力→ソート→圧縮とする。
find ./ -type f -print0 | sort -z | xargs -0 zip -@rjDo0 圧縮ファイル名.zip  なんとなくAndroidのPerfectViewerで見るときに表示が早くなったような気がする。たぶんプラシーボだけれど。</description>
    </item>
    
    <item>
      <title>Mathematica on Ubuntu 12.04 LTSで日本語関連のトラブル</title>
      <link>https://www.330k.info/essay/how-to-make-mathematica8-process-japanese-on-ubuntu-1204-ltf-64bit/</link>
      <pubDate>Tue, 09 Oct 2012 00:00:00 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/how-to-make-mathematica8-process-japanese-on-ubuntu-1204-ltf-64bit/</guid>
      <description>Mathematica 8 Home Edition 日本語版をUbuntu 12.04 LTS 64bit版にインストールしたところ、
 ディレクトリ、ファイル名に日本語が含まれるノートブックファイル(.nb)を開けない ディレクトリ、ファイル名に日本語が含まれるとImport/Exportできない、FileNamesで列挙できない ノートブック中に日本語を入力できない $SystemCharacterEncoding、$CharacterEncodingが&amp;rdquo;EUC-JP&amp;rdquo;になっている  などの言語関連の不具合があった。
これから作るノートブックは英語だけで書けば済むが、今までに作ったノートブックファイルが開けないのがつらい。 一応Wolframのサポートにはメールを出したが、期待できそうになかった。
/usr/local/Wolram/以下のファイルで関係有りそうなものを試行錯誤していじった結果、以下の方法で対処できたのでメモ。
 /usr/local/Wolfram/Mathematica/8.0/Executables以下の起動用スクリプトファイルMathematica、mathematicaの「LANG=ja_JP.eucJP」を「LANG=en_US.UTF-8」などに適当に変更orコメントアウト /usr/local/Wolfram/Mathematica/8.0/SystemFiles/CharacterEncodings/UTF-8.mの内容をISO8859-1.mにコピー  $SystemCharacterEncoding、$CharacterEncodingは&amp;rdquo;ISO8859-1&amp;rdquo;になってしまうのが気持ち悪いが、とりあえず実用上問題がなくなった。
あとは本当にISO8859-1の文字コードで書かれたファイルを読み込むことができなくなってしまうが、扱う機会はないので良しとする。
Oct. 7 2016 追記
4年越しにWolfram Researchから連絡が来た。
 In May 2012 you reported an issue with Mathematica wherein Mathematica was unable to open files from folders with non-English cahracters in the name. We believe that the issue has been resolved in the current release of Mathematica.
Thank you for your report and we look forward to a continued, productive relationship with you.</description>
    </item>
    
  </channel>
</rss>