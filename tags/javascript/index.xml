<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaScript on 330k info</title>
    <link>https://www.330k.info/tags/javascript/</link>
    <description>Recent content in JavaScript on 330k info</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Tue, 24 Jan 2023 03:10:49 +0900</lastBuildDate><atom:link href="https://www.330k.info/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ガルーンで予定のリマインダーをブラウザのみで実施する</title>
      <link>https://www.330k.info/essay/garoon_notification_javascript_customize/</link>
      <pubDate>Tue, 24 Jan 2023 03:10:49 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/garoon_notification_javascript_customize/</guid>
      <description>&lt;p&gt;Cybozuのガルーンは、PCのCybozu Desktop2やスマホのKUNAIアプリに予定の通知機能はあるものの、
ブラウザでのNotification APIを使った通知機能は実装されていない(2023-01-24時点)。&lt;/p&gt;
&lt;p&gt;そこで、&lt;a href=&#34;https://jp.cybozu.help/g/ja/admin/system/customize.html&#34;&gt;JavaScript / CSSによるカスタマイズ&lt;/a&gt;機能を使って予定の時刻に迫った時に通知を表示させてみた(管理者向け)。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>測地線距離計算式・計算ライブラリの精度評価 </title>
      <link>https://www.330k.info/essay/geodesic_distance_formula_comparison_2/</link>
      <pubDate>Thu, 17 Mar 2022 01:13:49 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/geodesic_distance_formula_comparison_2/</guid>
      <description>&lt;p&gt;2地点の緯度経度を与えてその間の距離を求める計算式はいくつかあり、
&lt;a href=&#34;https://www.330k.info/essay/precision-of-mathematica-geodistance-and-geographical-distance-formula/&#34;&gt;GeoDistanceとその他の測地線距離算出式の精度&lt;/a&gt;
ではランダムな2点間の距離や、日本での運転経路データを用いて代表的な計算式の精度を評価したが、
短い距離の計算精度の評価と、対蹠点付近の計算精度の評価が不十分であった。&lt;/p&gt;
&lt;p&gt;そこで、比較する計算式を追加した上で、GeographicLibのテストデータを用いて計算精度の再評価を行った。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JavaScriptのCache APIで有効期限付きの階層キャッシュを実装する</title>
      <link>https://www.330k.info/essay/javascript-layered-cache-api-with-expiration/</link>
      <pubDate>Sun, 13 Feb 2022 00:02:11 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/javascript-layered-cache-api-with-expiration/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.330k.info/software/simplify_gpx/&#34;&gt;GPXトラックログを間引く・簡略化&lt;/a&gt;や&lt;a href=&#34;https://www.330k.info/software/chrome_rwgps_ele_gsi/&#34;&gt;RWGPS地理院標高 - Chrome拡張機能
&lt;/a&gt;で国土地理院の標高タイルを利用する機能を付ける際、国土地理院の標高タイルをキャッシュする機能を実装したかった。&lt;/p&gt;
&lt;p&gt;そこで有効期限を付けて、かつメモリとディスクの2階層構造を持つキャッシュを実装してみた。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>逆グーデルマン関数の計算式のJavaScriptにおける精度</title>
      <link>https://www.330k.info/essay/precise_comparison_of_gudermannian_function/</link>
      <pubDate>Tue, 14 Sep 2021 22:48:02 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/precise_comparison_of_gudermannian_function/</guid>
      <description>&lt;p&gt;メルカトル図法の投影座標の計算に逆グーデルマン関数を用いる(&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E3%83%A1%E3%83%AB%E3%82%AB%E3%83%88%E3%83%AB%E5%9B%B3%E6%B3%95&#34;&gt;メルカトル図法 - Wikipedia&lt;/a&gt;)が、等価な計算式が複数ある。&lt;/p&gt;
&lt;p&gt;JavaScriptで計算する際に、どの計算式を用いるのが誤差が少なくなるのか調査した。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JavaScriptライブラリの初期化完了やJSONPのコールバック関数をPromise化する</title>
      <link>https://www.330k.info/essay/promise_wait_for_jsonpcallback_initialize/</link>
      <pubDate>Thu, 04 Mar 2021 17:01:31 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/promise_wait_for_jsonpcallback_initialize/</guid>
      <description>&lt;p&gt;Google Maps JavaScript APIの初期化完了をPromiseで待機したかったので、方法を考えてみた。&lt;/p&gt;
&lt;p&gt;グローバル環境が少し汚れるが、一般にJSONPのコールバックをPromise化できる。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ガルーンからGoogleカレンダーに同期する(GAS使用)</title>
      <link>https://www.330k.info/essay/sync-garoon-google-calendar/</link>
      <pubDate>Fri, 12 Feb 2021 13:15:47 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/sync-garoon-google-calendar/</guid>
      <description>&lt;p&gt;Cybozuのガルーン(Garoon)はよくできたソフトウェアなのだが、他のサービスとの連携、という点では使いにくかった。&lt;/p&gt;
&lt;p&gt;以前からSOAP APIはあったものの、繰り返し予定が難関で、実際の日にちを都度計算しなければならず、同期ツールの作成を断念していた。&lt;/p&gt;
&lt;p&gt;だがREST APIが登場し、繰り返し予定が1件ずつ返されるようになってとても処理しやすくなったので、GASで動作するガルーンからGoogleカレンダーへの一方向同期スクリプトを作成した。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Garmin Connectでこれまでのすべてのアクティビティを一括ダウンロードする</title>
      <link>https://www.330k.info/essay/download-all-activities-from-garmin-connect/</link>
      <pubDate>Mon, 27 Jul 2020 15:31:50 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/download-all-activities-from-garmin-connect/</guid>
      <description>&lt;p&gt;Garmin Connectがサイバー攻撃を受けてダウンした。&lt;/p&gt;
&lt;p&gt;ランサムウェアにやられたらしい、ということで最悪の場合、これまでの記録が消えてしまう可能性がある。&lt;/p&gt;
&lt;p&gt;幸いにもとりあえず復旧したようなので、これまでの全アクティビティをローカルにバックアップした。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>起動時にWScriptからCScriptへ自動で切り替える(JScript)</title>
      <link>https://www.330k.info/essay/switch-wscript-to-cscript-js/</link>
      <pubDate>Mon, 06 Jul 2020 16:55:30 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/switch-wscript-to-cscript-js/</guid>
      <description>&lt;p&gt;ExplorerからWSHの&lt;code&gt;.js&lt;/code&gt;ファイルをダブルクリックすると&lt;code&gt;wscript.exe&lt;/code&gt;で起動されるが、&lt;code&gt;cscript.exe&lt;/code&gt;で起動したい場合も多い。&lt;/p&gt;
&lt;p&gt;そこで&lt;code&gt;wscript&lt;/code&gt;で起動した場合に、引数を含めて&lt;code&gt;cscript&lt;/code&gt;で起動し直すスニペットを作成した。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GASのgoogle.script.runをPromise化する</title>
      <link>https://www.330k.info/essay/gas_google_script_run_convert_promise/</link>
      <pubDate>Thu, 25 Jun 2020 21:15:24 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/gas_google_script_run_convert_promise/</guid>
      <description>&lt;p&gt;GASでクライアント側のJavaScriptから、サーバ側のJavaScriptを呼び出す時、&lt;code&gt;google.script.run&lt;/code&gt;を使用する。&lt;/p&gt;
&lt;p&gt;ただこれは非同期処理でありながらPromiseを返さず、独自に&lt;code&gt;withSuccessHandler&lt;/code&gt;と&lt;code&gt;withFailureHandler&lt;/code&gt;にコールバックを設定する必要があるので、ちょっと面倒。&lt;/p&gt;
&lt;p&gt;ということで、Promise化するコードを作ってみた(V8エンジン限定)。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bxSliderで2番目以降の画像が一瞬表示されるのを防止する</title>
      <link>https://www.330k.info/essay/show-only-first-images/</link>
      <pubDate>Fri, 01 Mar 2019 07:01:13 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/show-only-first-images/</guid>
      <description>もうjQueryも古いと言われているが、会社のウェブサイトでjQueryプラグインのbxSliderが使われている。 Google先生のPageSpeed Insightに注意されたとおり、レンダリングブロックするJavaScriptを後ろ(&amp;lt;/body&amp;gt;直上)に配置したところ、 2枚目以降の画像が一瞬表示されてしまう現象が発生。 これはJSをレンダリングブロックしないように後ろに配置したり、</description>
    </item>
    
    <item>
      <title>Google Analyticsで動画(Video要素)のイベントを計測</title>
      <link>https://www.330k.info/essay/measure_video_events_with_google_analytics/</link>
      <pubDate>Mon, 02 Oct 2017 23:27:45 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/measure_video_events_with_google_analytics/</guid>
      <description>会社のウェブサイトに貼ってある動画ファイルが、実際にどれだけ再生されているのか調査するべく、 Google Analyticsのイベントで計測するためのコードを作ってみた。 計測対象は以下のイベント。 再生開始(play) 最後まで再生(ended) 一時停止(pause) 再生再開(resume) シークした(seeked) どこまで再生したか(動画時間の10%, 25%, 50%, 75%, 90%) HTML側 &amp;lt;video id=&amp;#34;movie001&amp;#34; width=&amp;#34;(動画幅)&amp;#3</description>
    </item>
    
    <item>
      <title>Unicode制御文字(LRO, RLO)でコピー・改変を防止 (構想)</title>
      <link>https://www.330k.info/essay/scramble_unicode_lro_rlo/</link>
      <pubDate>Mon, 21 Aug 2017 22:38:20 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/scramble_unicode_lro_rlo/</guid>
      <description>Unicode制御文字のうち、LRO(Left-to-right override, U+202D)とRLO(Right-to-left override, U+202E)は行中でも文字列の方向を変更する。 1行の中に何度もLROとRLOが入ると、カーソルキーが踊って楽しいことになる。 例えば、下のテキストの中でカーソルを動かしたり、文字列を選択しようとしても上手くできないはず。 ‮‭い‮を‭ろ‮る‭は‮ぬ‭に‮り‭ほ‮ち‭へ‮と ‮‭わ‮む‭</description>
    </item>
    
    <item>
      <title>Windows標準機能でZIPファイルの作成</title>
      <link>https://www.330k.info/essay/create_zip_file_with_wsh_jscript/</link>
      <pubDate>Mon, 08 May 2017 22:37:00 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/create_zip_file_with_wsh_jscript/</guid>
      <description>JScriptで複数のテキストファイルを書き出し、それをZIPでまとめたかったので作成。 VBAやVBScript版を参考に作ってみた。 参考サイト : http://kiq-creator.com/blog/?eid=33 複数のファイルをZIP圧縮する際のコツとしては、CopyHereをするたびに待機すること。 CopyHereは非同期なので、すぐにJS側に制御が返ってくるが、 複数のファイルを一気にCopyHereしようとすると、「読み取りできません」とエラーが出る。 使い</description>
    </item>
    
    <item>
      <title>Unicodeステガノグラフィ with JavaScript</title>
      <link>https://www.330k.info/software/plain-text-steganography-with-unicode/</link>
      <pubDate>Wed, 01 Jun 2016 22:42:38 +0900</pubDate>
      
      <guid>https://www.330k.info/software/plain-text-steganography-with-unicode/</guid>
      <description>&lt;p&gt;ゼロ幅文字を使ってUnicodeのプレーンテキストにステガノグラフィを施す、ブラウザのJavaScriptで動作するライブラリ。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Douglas-Peucker向けの優先度付きキュー実装の検討</title>
      <link>https://www.330k.info/essay/implement-of-priority-queue-for-douglas-peucker-simplify-algorithm/</link>
      <pubDate>Thu, 29 May 2014 00:00:00 +0900</pubDate>
      
      <guid>https://www.330k.info/essay/implement-of-priority-queue-for-douglas-peucker-simplify-algorithm/</guid>
      <description>Nov. 29 2015: JavaScriptで実装した優先度付きキューをGitHubで公開→https://github.com/330k/priorityqueue_js/ 各ヒープのベンチマーク → http://330k.github.io/priorityqueue_js/benchmark.html これにはFibonacci Heapも比較対象に入れてある 折れ線を間引くで書いたように、 Douglas-Peuckerアルゴリズムを改良して指定した点数まで点を削減して折れ線を簡略化する場合、 優先度付きキューを使うことに</description>
    </item>
    
  </channel>
</rss>
